# BEGIN_AWS_SSO_CLI
__aws_sso_profile_complete() {
  COMPREPLY=()
  local _args=${AWS_SSO_HELPER_ARGS:- -L error --no-config-check}
  local cur
  _get_comp_words_by_ref -n : cur

  COMPREPLY=($(compgen -W '$(/usr/local/bin/aws-sso $_args list --csv -P "Profile=$cur" Profile)' -- ""))

  __ltrim_colon_completions "$cur"
}

aws-sso-profile() {
  local _args=${AWS_SSO_HELPER_ARGS:- -L error --no-config-check}
  if [ -n "$AWS_PROFILE" ]; then
    echo "Unable to assume a role while AWS_PROFILE is set"
    return 1
  fi
  eval $(/usr/local/bin/aws-sso $_args eval -p "$1")
  if [ "$AWS_SSO_PROFILE" != "$1" ]; then
    return 1
  fi
}

aws-sso-clear() {
  local _args=${AWS_SSO_HELPER_ARGS:- -L error --no-config-check}
  if [ -z "$AWS_SSO_PROFILE" ]; then
    echo "AWS_SSO_PROFILE is not set"
    return 1
  fi
  eval $(aws-sso eval $_args -c)
}

complete -F __aws_sso_profile_complete aws-sso-profile
complete -C /usr/local/bin/aws-sso aws-sso
# END_AWS_SSO_CLI

# BEGIN_KUBECTL_COMPLETION
. <(kubectl completion zsh)
# END_KUBECTL_COMPLETION

# BEGIN_BASH_COMPLETION
autoload -U +X bashcompinit && bashcompinit
# END_BASH_COMPLETION

# BEGIN_TERRAFORM_COMPLETION
complete -o nospace -C $(which terraform) terraform
# END_TERRAFORM_COMPLETION

# BEGIN_COMPINIT
autoload -Uz compinit
for dump in ~/.zcompdump(N.mh+24); do
  compinit
done
compinit -C
# END_COMPINIT